{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem.module.scss","redux/selectors.js","redux/contacts/contacts-Actions.js","redux/types.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","redux/filter/filter-Actions.js","Components/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","filter","getVisibleContacts","contacts","items","getContacts","normalizedFilter","toLowerCase","contact","name","includes","contactsActions","addContact","createAction","number","payload","id","uuidv4","deleteContact","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","find","alert","type","onChange","required","className","styles","margin","pattern","title","btn","ContactList","contactId","map","listItem","onClick","changeFilter","Filter","filterActions","handleChangeFilter","App","createReducer","actions","combineReducers","_","contactsPersistConfig","key","storage","storeConfig","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","devTools","process","store","partos","persistStore","root","document","querySelector","ReactDOM","render","StrictMode","persistor"],"mappings":"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","file":"static/js/main.a53cdbcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZomYG\",\"label\":\"ContactForm_label__2fjsD\",\"fieldInput\":\"ContactForm_fieldInput__21Q83\",\"validatorError\":\"ContactForm_validatorError__3yFJy\",\"btn\":\"ContactForm_btn__3fPMm\",\"margin\":\"ContactForm_margin__2zagG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3hrR-\",\"btn\":\"ContactListItem_btn__1ou_0\",\"margin\":\"ContactListItem_margin__2_l6O\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD_CONTACT, DELETE_CONTACT } from 'redux/types';\nconst addContact = createAction(ADD_CONTACT, ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(DELETE_CONTACT);\n\nconst contactsActions = { addContact, deleteContact };\n\nexport default contactsActions;\n","const ADD_CONTACT = 'contacts/add';\nconst DELETE_CONTACT = 'contacts/delete';\nconst CHANGE_FILTER = 'contacts/changeFilter';\nexport { ADD_CONTACT, DELETE_CONTACT, CHANGE_FILTER };\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport styles from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport contactsActions from '../../redux/contacts/contacts-Actions';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const addContact = (name, number) => {\n    contacts.find(contact => name === contact.name)\n      ? alert(name + ' is already in contacts')\n      : dispatch(contactsActions.addContact({ name, number }));\n  };\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addContact(name, number);\n\n    resetState();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <br />\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <br />\n      <label>\n        Number\n        <br />\n        <input\n          className={styles.margin}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.scss';\nimport contactsActions from '../../redux/contacts/contacts-Actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/selectors';\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  const deleteContact = contactId => {\n    dispatch(contactsActions.deleteContact(contactId));\n  };\n\n  return (\n    <section>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id} className={styles.listItem}>\n            {contact.name}: {contact.number}\n            {deleteContact && (\n              <button\n                className={styles.btn}\n                onClick={() => {\n                  deleteContact(contact.id);\n                }}\n              >\n                Delete\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n\n  deleteContact: PropTypes.func,\n};\nexport default ContactList;\n","import { CHANGE_FILTER } from 'redux/types';\nimport { createAction } from '@reduxjs/toolkit';\nconst changeFilter = createAction(CHANGE_FILTER);\nexport default changeFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport filterActions from '../../redux/filter/filter-Actions';\nimport { getFilter } from '../../redux/selectors';\nlet Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const handleChangeFilter = e => {\n    dispatch(filterActions(e));\n  };\n  return (\n    <section>\n      <label>\n        Find contacts by name\n        <input\n          onChange={e => handleChangeFilter(e.target.value)}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n        />\n      </label>\n    </section>\n  );\n};\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\nexport default Filter;\n","import './App.css';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\n\nimport Filter from './Components/Filter/Filter';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-Actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default combineReducers({\n  items,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport changeFilter from './filter-Actions';\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducer';\nimport filter from './filter/filter-reducer';\n/* import logger from 'redux-logger'; */\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst storeConfig = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n    filter,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst partos = persistStore(storeConfig);\nconst store = { storeConfig, partos };\nexport default store;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\nconst { storeConfig, partos } = store;\nReactDOM.render(\n  <react.StrictMode>\n    <Provider store={storeConfig}>\n      <PersistGate persistor={partos}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </react.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}