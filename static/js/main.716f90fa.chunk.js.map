{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem.module.scss","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","redux/selectors.js","Components/Filter/Filter.js","redux/contacts/contacts-Actions.js","redux/types.js","redux/filter/filter-Actions.js","App.js","redux/contacts/contactsReducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js"],"names":["module","exports","ContactForm","addContact","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","type","onChange","required","className","styles","margin","pattern","title","btn","ContactList","deleteContact","contacts","map","contact","listItem","onClick","id","getFilter","state","filter","getVisibleContacts","items","getContacts","normalizedFilter","toLowerCase","includes","Filter","handleChangeFilter","contactsActions","createAction","payload","uuidv4","changeFilter","App","useSelector","dispatch","useDispatch","find","alert","filterActions","contactId","createReducer","actions","combineReducers","_","contactsPersistConfig","key","storage","storeConfig","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","devTools","process","store","partos","persistStore","root","document","querySelector","ReactDOM","render","StrictMode","persistor"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,WAAa,gCAAgC,eAAiB,oCAAoC,IAAM,yBAAyB,OAAS,8B,mBCAhOD,EAAOC,QAAU,CAAC,SAAW,kCAAkC,IAAM,6BAA6B,OAAS,kC,6JCiE5FC,MA9Df,YAAsC,IAAfC,EAAc,EAAdA,WACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEL,SAATP,EAAkBC,EAAQM,GAASJ,EAAUI,IAe/C,OACE,uBAAMC,SATa,SAAAH,GACnBA,EAAEI,iBAEFX,EAAWE,EAAME,GAPjBD,EAAQ,IACRE,EAAU,KAYV,UACE,yCAEE,uBACA,uBACEO,KAAK,OACLH,MAAOP,EACPA,KAAK,OACLW,SAAUP,EACVQ,UAAQ,OAGZ,uBACA,2CAEE,uBACA,uBACEC,UAAWC,IAAOC,OAClBR,MAAOL,EACPQ,KAAK,MACLV,KAAK,SACLgB,QAAQ,yFACRC,MAAM,+FACNL,UAAQ,EACRD,SAAUP,OAGd,uBACA,wBAAQS,UAAWC,IAAOI,IAAKR,KAAK,SAApC,6B,iBCpBSS,EAhCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,SAAlB,OAClB,kCACE,6BACGA,EAASC,KAAI,SAAAC,GAAO,OACnB,qBAAqBV,UAAWC,IAAOU,SAAvC,UACGD,EAAQvB,KADX,KACmBuB,EAAQrB,OACxBkB,GACC,wBACEP,UAAWC,IAAOI,IAClBO,QAAS,WACPL,EAAcG,EAAQG,KAH1B,sBAHKH,EAAQG,YCNZC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,QAE3BC,EAAqB,SAAAF,GAChC,IAAMP,EAJmB,SAAAO,GAAK,OAAIA,EAAMP,SAASU,MAIhCC,CAAYJ,GAEvBK,EADSN,EAAUC,GACOM,cAEhC,OAAOb,EAASQ,QAAO,SAAAN,GAAO,OAC5BA,EAAQvB,KAAKkC,cAAcC,SAASF,OCczBG,EApBF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,mBAAoBR,EAAa,EAAbA,OAClC,OACE,kCACE,0DAEE,uBACElB,SAAU,SAAAN,GAAC,OAAIgC,EAAmBhC,EAAEC,OAAOC,QAC3CA,MAAOsB,EACP7B,KAAK,SACLU,KAAK,e,eCGA4B,EAFS,CAAExC,WAVPyC,YCHC,gBDGyB,gBAAGvC,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAT,MAAuB,CAClEsC,QAAS,CACPd,GAAIe,cACJzC,OACAE,cAMkCkB,cAFhBmB,YCVC,oBCERG,EADMH,YDAC,yB,OEqCPI,I,EAAAA,EA9Bf,WACE,IAAMtB,EAAWuB,YAAYd,GACvBD,EAASe,YAAYjB,GACrBkB,EAAWC,cAcjB,OACE,gCACE,2CACA,cAAC,EAAD,CAAahD,WARE,SAACE,EAAME,GACxBmB,EAAS0B,MAAK,SAAAxB,GAAO,OAAIvB,IAASuB,EAAQvB,QACtCgD,MAAMhD,EAAO,2BACb6C,EAASP,EAAgBxC,WAAW,CAAEE,OAAME,eAM9C,0CAEA,cAAC,EAAD,CAAQmC,mBAlBe,SAAAhC,GACzBwC,EAASI,EAAc5C,KAiB2BwB,OAAQA,IAExD,cAAC,EAAD,CAAaR,SAAUA,EAAUD,cAhBf,SAAA8B,GACpBL,EAASP,EAAgBlB,cAAc8B,W,8BCfrCnB,EAAQoB,YAAc,IAAD,mBACxBC,EAAQtD,YAAa,SAAC8B,EAAD,OAAUY,EAAV,EAAUA,QAAV,4BAA4BZ,GAA5B,CAAmCY,OADhC,cAExBY,EAAQhC,eAAgB,SAACQ,EAAD,OAAUY,EAAV,EAAUA,QAAV,OACvBZ,EAAMC,QAAO,qBAAGH,KAAgBc,QAHT,IAMZa,cAAgB,CAC7BtB,UCLaF,EAJAsB,YAAc,GAAD,eACzBT,GAAe,SAACY,EAAD,YAAMd,Y,gBCIlBe,EAAwB,CAC5BC,IAAK,WACLC,Q,OAAAA,GAGIC,EAAcC,YAAe,CACjCC,QAAS,CACPvC,SAAUwC,YAAeN,EAAuBO,GAChDjC,UAEFkC,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CAAEC,mBAAmB,KAC5CC,UAAUC,IAKGC,EADD,CAAEV,cAAaW,OADdC,YAAaZ,ICdtBa,G,YAAOC,SAASC,cAAc,UAC5Bf,EAAwBU,EAAxBV,YAAaW,EAAWD,EAAXC,OACrBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOV,EAAjB,SACE,cAAC,IAAD,CAAamB,UAAWR,EAAxB,SACE,cAAC,EAAD,UAINE,K","file":"static/js/main.716f90fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZomYG\",\"label\":\"ContactForm_label__2fjsD\",\"fieldInput\":\"ContactForm_fieldInput__21Q83\",\"validatorError\":\"ContactForm_validatorError__3yFJy\",\"btn\":\"ContactForm_btn__3fPMm\",\"margin\":\"ContactForm_margin__2zagG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3hrR-\",\"btn\":\"ContactListItem_btn__1ou_0\",\"margin\":\"ContactListItem_margin__2_l6O\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addContact(name, number);\n\n    resetState();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <br />\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <br />\n      <label>\n        Number\n        <br />\n        <input\n          className={styles.margin}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './ContactListItem.module.scss';\nconst ContactList = ({ deleteContact, contacts }) => (\n  <section>\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} className={styles.listItem}>\n          {contact.name}: {contact.number}\n          {deleteContact && (\n            <button\n              className={styles.btn}\n              onClick={() => {\n                deleteContact(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </section>\n);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n\n  deleteContact: PropTypes.func,\n};\nexport default ContactList;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet Filter = ({ handleChangeFilter, filter }) => {\n  return (\n    <section>\n      <label>\n        Find contacts by name\n        <input\n          onChange={e => handleChangeFilter(e.target.value)}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n        />\n      </label>\n    </section>\n  );\n};\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\nexport default Filter;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD_CONTACT, DELETE_CONTACT } from 'redux/types';\nconst addContact = createAction(ADD_CONTACT, ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(DELETE_CONTACT);\n\nconst contactsActions = { addContact, deleteContact };\n\nexport default contactsActions;\n","const ADD_CONTACT = 'contacts/add';\nconst DELETE_CONTACT = 'contacts/delete';\nconst CHANGE_FILTER = 'contacts/changeFilter';\nexport { ADD_CONTACT, DELETE_CONTACT, CHANGE_FILTER };\n","import { CHANGE_FILTER } from 'redux/types';\nimport { createAction } from '@reduxjs/toolkit';\nconst changeFilter = createAction(CHANGE_FILTER);\nexport default changeFilter;\n","import './App.css';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport { getVisibleContacts, getFilter } from './redux/selectors';\nimport Filter from './Components/Filter/Filter';\nimport contactsActions from 'redux/contacts/contacts-Actions';\nimport filterActions from './redux/filter/filter-Actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction App() {\n  const contacts = useSelector(getVisibleContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(filterActions(e));\n  };\n\n  const deleteContact = contactId => {\n    dispatch(contactsActions.deleteContact(contactId));\n  };\n  const addContact = (name, number) => {\n    contacts.find(contact => name === contact.name)\n      ? alert(name + ' is already in contacts')\n      : dispatch(contactsActions.addContact({ name, number }));\n  };\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm addContact={addContact} />\n      <h2>Contacts</h2>\n\n      <Filter handleChangeFilter={handleChangeFilter} filter={filter} />\n\n      <ContactList contacts={contacts} deleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-Actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default combineReducers({\n  items,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport changeFilter from './filter-Actions';\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport filter from './filter/filter-reducer';\r\n/* import logger from 'redux-logger'; */\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n};\r\n\r\nconst storeConfig = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    filter,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({ serializableCheck: false }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst partos = persistStore(storeConfig);\r\nconst store = { storeConfig, partos };\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\nconst { storeConfig, partos } = store;\nReactDOM.render(\n  <react.StrictMode>\n    <Provider store={storeConfig}>\n      <PersistGate persistor={partos}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </react.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}